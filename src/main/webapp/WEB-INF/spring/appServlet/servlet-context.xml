<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> -->
	
	<context:component-scan base-package="controller,dao,model,service,utils" />
	<!-- 기존의 뷰 리졸버 설정 변경 -->
	<beans:bean id="tilesviewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />
		<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
		<beans:list>
			<beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
		</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- 디폴트 서블릿 설정과 WebSocket 객체를 주소와 바인딩하는 코드를 작성 -->
	<!-- 이 코드는 거의 필수 -->
	<default-servlet-handler />
	<!-- 웹 소켓 등록 -->
	<!-- 웹 소켓 핸들러의 빈을 생성 -->
	<!-- /chat-ws 오면 com.ch.websocket.ChatWebSocketHandler 실행 -->
 	<beans:bean id="chatHandler" class="utils.ChatWebSocketHandler"/>
	<websocket:handlers>
		<websocket:mapping handler="chatHandler" path="/chat-ws.do" />
		<websocket:handshake-interceptors>
	       <beans:bean class="utils.HandshakeInterceptor"/>
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	
</beans:beans>
